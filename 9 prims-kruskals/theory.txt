PROGRAM LOGIC: 
It falls under a class of algorithms called greedy algorithms that find the local optimum in the hopes of finding a global optimum.
We start from one vertex and keep adding edges with the lowest weight until we reach our goal.
The steps for implementing Prim's algorithm are as follows:
1.	Initialize the minimum spanning tree with a vertex chosen at random.
2.	Find all the edges that connect the tree to new vertices, find the minimum and add it to the tree
3.	Keep repeating step 2 until we get a minimum spanning tree

PSEUDOCODE: 

The pseudocode for prim's algorithm shows how we create two sets of vertices U and V-U. U contains the list of vertices that have been visited and V-U the list of vertices that haven't. One by one, we move vertices from set V-U to set U by connecting the least weight edge.
T = ∅;
 U = { 1 };
 while (U ≠ V)
 let (u, v) be the lowest cost edge such that u ∈ U and v ∈ V - U;
 T = T ∪ {(u, v)}
 U = U ∪ {v}
